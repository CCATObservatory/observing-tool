# author: Martin Folger (M.Folger@roe.ac.uk)

# Making
#     class files          :  "gmake"         (output: CLASSES_DIR, set in CONF_HOME/make.conf)
#     jar file with classes:  "gmake jar"     (output: JAR_DIR,     set in CONF_HOME/make.conf)
#     javadoc html files   :  "gmake doc"     (output: DOC_DIR,     set in CONF_HOME/make.conf)
#
#     install              :  "gmake install" (output: see CONF_HOME/make.conf)
#     clean                :  "gmake clean"   (deletes class files, jar files, api docs)
#
# The output directories are by default subdirectories of LOCAL_INSTALL_ROOT.
# They can be edited in CONF_HOME/make.conf or changed on the command line (e.g. make JAR_DIR=my_jar_dir jar)

CONF_HOME           = ../conf
include $(CONF_HOME)/make.conf


CLASSES_DIR_FOR_SED = $(shell echo $(CLASSES_DIR) | sed -e 's/\./\\\./g' | sed -e 's/\//\\\//g')
CLASS_FILES         = $(shell find . -name "*.java" | sed -e 's/\.\//$(CLASSES_DIR_FOR_SED)\//g' | sed -e 's/\.java/\.class/g')

CLASSPATH           = $(CLASSES_DIR):$(GEMINI_CP):$(ORAC_CP):$(ODB_CP):$(JSKY_RELATED_CP)

# Should NOT be changed as other packages might rely on the this name!
JAR_FILE            = om.jar

OM_SCRIPT           = om

RMI_GENERATED_CLASSES = $(CLASSES_DIR)/om/console/commandSent_Skel.class \
                        $(CLASSES_DIR)/om/console/commandSent_Stub.class \
                        $(CLASSES_DIR)/om/console/messageServer_Skel.class \
                        $(CLASSES_DIR)/om/console/messageServer_Stub.class \
                        $(CLASSES_DIR)/om/console/remoteFrame_Skel.class \
                        $(CLASSES_DIR)/om/console/remoteFrame_Stub.class


all: classes $(RMI_GENERATED_CLASSES) cfg script


classes: $(CLASSES_DIR) $(CLASS_FILES)

cfg: $(CFG_DIR) $(OT_CFG_DIR)

script: $(BIN_DIR)/$(OM_SCRIPT)

$(LOCAL_INSTALL_ROOT):
	@ -mkdir -p $(LOCAL_INSTALL_ROOT)

$(CLASSES_DIR):
	@ -mkdir -p $(CLASSES_DIR)

$(BIN_DIR):
	@ -mkdir -p $(BIN_DIR)	

$(CFG_DIR): ../cfg
	cp -r ../cfg $(LOCAL_INSTALL_ROOT)

$(OT_CFG_DIR): $(CFG_TELESCOPE_DIR)
	rm -rf $(OT_CFG_DIR)
	cp -r  $(CFG_TELESCOPE_DIR) $(OT_CFG_DIR)

# default rule 
$(CLASSES_DIR)/%.class: %.java
	$(JAVAC) $(JFLAGS) -d $(CLASSES_DIR) -classpath $(CLASSPATH) -sourcepath . $<


# Bundle everything into jar file
jar: classes
	jar cf $(JAR_DIR)/$(JAR_FILE) -C $(CLASSES_DIR) .

$(CLASSES_DIR)/MANIFEST.MF: $(CONF_HOME)/MANIFEST.MF
	cp $(CONF_HOME)/MANIFEST.MF $(CLASSES_DIR)/MANIFEST.MF

doc:
	-mkdir -p $(DOC_DIR)
	$(JAVADOC) -J-mx50m -d $(DOC_DIR) `find . -name "*.java"`


$(BIN_DIR)/$(OM_SCRIPT): $(BIN_DIR) $(CONF_HOME)/make.conf
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in            #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.\
	\n# And the format of this script is not really meant to support manual editing.          #\
	\n#########################################################################################\
	\n\
        \n#set JAVA = $(JAVA)\
	\n# For now continue to run with JDK1.1.x\
	\nset JAVA = /usr/java1.1/bin/java\
	\n\
	\ncleanup\
	\n\
	\necho \"Starting the ORAC observation manager\"\
	\n\
	\n# set default behaviour to -ql -nosim -noeng for UKIRT\
	\n\
	\nset tosim = \"nosim\"\
	\nset toql = \"ql\"\
	\nset toeng = \"noeng\"\
	\n\
	\nwhile ($$""#argv != 0)\
	\n   switch ($$""argv[1])\
	\n      case -noql:\
	\n        set toql = \"noql\"\
	\n        echo No quick look specified\
	\n        shift\
	\n        breaksw\
	\n      case -ql:\
	\n        set toql = \"ql\"\
	\n        echo Quick look specified\
	\n        shift\
	\n        breaksw\
	\n      case -nosim:\
	\n        set tosim = \"nosim\"\
	\n        echo No simulation specified\
	\n        shift\
	\n        breaksw\
	\n      case -sim:\
	\n        set tosim = \"sim\"\
	\n        echo Full Simulation specified \
	\n        shift\
	\n        breaksw\
	\n      case -simInst:\
        \n        set tosim = \"simInst\"\
        \n        echo Instrument Simulation specified \
        \n        shift\
	\n        breaksw\
	\n      case -simTel:\
	\n        set tosim = \"simTel\"\
	\n        echo Telescope Simulation specified \
	\n        shift\
	\n        breaksw\
	\n      case -eng\
	\n        set toeng = \"eng\"\
	\n        echo Engineering specified\
	\n        shift\
	\n        breaksw\
	\n      case -noeng\
	\n        set toeng = \"noeng\"\
	\n        echo Science observing specified\
	\n        shift\
	\n        breaksw\
	\n      default:\
	\n        echo \"No such option\"\
	\n        exit 1\
	\n        breaksw\
	\n   endsw\
	\n\
	\nend\
	\n\
	\nset CFG_DIR = $(shell cd $(CFG_DIR); pwd)\
	\n\
	\n$$""{JAVA} $(JAVA_FLAGS) -DSERVER=$(SERVER) -classpath \
	$(shell echo $(foreach CLASSDIR, $(shell echo $(CLASSPATH):$(JAVAHELP_CP) | sed -e 's/:/ /g'),$(shell cd `dirname $(CLASSDIR)`;pwd)/$(shell basename $(CLASSDIR))) | sed -e 's/ /:/g'):$(ADDITIONAL_RUN_CP)\
	om.sciProgram.oracOM $$""{CFG_DIR}/om.cfg\
	\n\
	\n" > $(BIN_DIR)/$(OM_SCRIPT)

	@echo Creating $(BIN_DIR)/$(OM_SCRIPT)
	chmod 755 $(BIN_DIR)/$(OM_SCRIPT)


clean:
	rm -rf $(CLASSES_DIR) $(JAR_DIR) $(DOC_DIR)
	rm -f  $(BIN_DIR)/$(OM_SCRIPT)


$(RMI_GENERATED_CLASSES):
	$(RMIC) -classpath $(CLASSPATH) -d $(CLASSES_DIR) om.console.commandSent
	$(RMIC) -classpath $(CLASSPATH) -d $(CLASSES_DIR) om.console.messageServer
	$(RMIC) -classpath $(CLASSPATH) -d $(CLASSES_DIR) om.console.remoteFrame


###################################################################
#                    Installation                                 #
###################################################################

ALL_TOOLS           = $(INSTALL_ROOT)/tools/$(notdir $(JHTOOLS_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(JHALL_JAR))

ALL_LIBS            = $(INSTALL_ROOT)/lib/$(notdir $(GEMINI_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(ORAC_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(ODB_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(OM_JAR))


INSTALL_CLASSES_DIR = $(INSTALL_ROOT)/classes
INSTALL_JAR_DIR     = $(INSTALL_ROOT)/lib
INSTALL_DOC_DIR     = $(INSTALL_ROOT)/html/api
INSTALL_BIN_DIR     = $(INSTALL_ROOT)/bin
INSTALL_CFG_DIR     = $(INSTALL_ROOT)/cfg


install:
ifeq ($(INSTALL_ROOT),)
	@echo Usage: gmake "INSTALL_ROOT=myinstall_directory" install
else
	gmake _install
endif


_install: $(INSTALL_ROOT)/lib $(INSTALL_ROOT)/tools $(ALL_LIBS) $(ALL_TOOLS) $(INSTALL_ROOT)/cfg $(INSTALL_ROOT)/ot_cfg $(INSTALL_ROOT)/bin/om


$(INSTALL_ROOT)/tools/$(notdir $(JHTOOLS_JAR)): $(JHTOOLS_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(JHALL_JAR)): $(JHALL_JAR)
	cp $< $@


# Rules for Orac libraries in default location
# If a jar file is not found in its default location the following rules will try to create it directly
# in $(INSTALL_ROOT)/lib rather then create in its default location and then copy it
# into $(INSTALL_ROOT)/lib. This avoids interfering with local setting in other directories.
# These rules will only work if the location of the Orac modules (GEMINI, ORAC, ODB, OT) are equivalent to
# the ones in the cvs directory tree.

$(INSTALL_ROOT)/lib/$(notdir $(GEMINI_JAR)):
ifneq ($(shell if test -f $(GEMINI_JAR) ; then echo exists; fi), )
	cp $(GEMINI_JAR) $@
else
	(cd ../../GEMINI/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(ORAC_JAR)):
ifneq ($(shell if test -f $(ORAC_JAR) ; then echo exists; fi), )
	cp $(ORAC_JAR) $@
else
	(cd ../../ORAC/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(ODB_JAR)):
ifneq ($(shell if test -f $(ODB_JAR) ; then echo exists; fi), )
	cp $(ODB_JAR) $@
else
	(cd ../../ODB/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(OM_JAR)):
ifneq ($(shell if test -f $(OM_JAR) ; then echo exists; fi), )
	cp $(OM_JAR) $@
else
	(cd ../../OM/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif


$(INSTALL_ROOT)/cfg: $(CFG_DIR)
	cp -r $< $@

$(INSTALL_ROOT)/ot_cfg: $(OT_CFG_DIR)
	cp -r $< $@

$(INSTALL_ROOT)/bin:
	mkdir -p $(INSTALL_ROOT)/bin

$(INSTALL_ROOT)/lib:
	mkdir -p $(INSTALL_ROOT)/lib

$(INSTALL_ROOT)/tools:
	mkdir -p $(INSTALL_ROOT)/tools



$(INSTALL_ROOT)/bin/om: $(INSTALL_ROOT)/bin
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in            #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.\
	\n# And the format of this script is not really meant to support manual editing.          #\
	\n#########################################################################################\
	\n\
        \n#set JAVA = $(JAVA)\
	\n# For now continue to run with JDK1.1.x\
	\nset JAVA = /usr/java1.1/bin/java\
	\n\
	\ncleanup\
	\n\
	\necho \"Starting the ORAC observation manager\"\
	\n\
	\n# set default behaviour to -ql -nosim -noeng for UKIRT\
	\n\
	\nset tosim = \"nosim\"\
	\nset toql = \"ql\"\
	\nset toeng = \"noeng\"\
	\n\
	\nwhile ($$""#argv != 0)\
	\n   switch ($$""argv[1])\
	\n      case -noql:\
	\n        set toql = \"noql\"\
	\n        echo No quick look specified\
	\n        shift\
	\n        breaksw\
	\n      case -ql:\
	\n        set toql = \"ql\"\
	\n        echo Quick look specified\
	\n        shift\
	\n        breaksw\
	\n      case -nosim:\
	\n        set tosim = \"nosim\"\
	\n        echo No simulation specified\
	\n        shift\
	\n        breaksw\
	\n      case -sim:\
	\n        set tosim = \"sim\"\
	\n        echo Full Simulation specified \
	\n        shift\
	\n        breaksw\
	\n      case -simInst:\
        \n        set tosim = \"simInst\"\
        \n        echo Instrument Simulation specified \
        \n        shift\
	\n        breaksw\
	\n      case -simTel:\
	\n        set tosim = \"simTel\"\
	\n        echo Telescope Simulation specified \
	\n        shift\
	\n        breaksw\
	\n      case -eng\
	\n        set toeng = \"eng\"\
	\n        echo Engineering specified\
	\n        shift\
	\n        breaksw\
	\n      case -noeng\
	\n        set toeng = \"noeng\"\
	\n        echo Science observing specified\
	\n        shift\
	\n        breaksw\
	\n      default:\
	\n        echo \"No such option\"\
	\n        exit 1\
	\n        breaksw\
	\n   endsw\
	\n\
	\nend\
	\n\
	\nset CFG_DIR = $(shell cd $(CFG_DIR); pwd)\
	\n\
	\n$$""{JAVA} $(JAVA_FLAGS) -DSERVER=$(SERVER) -classpath \
	$(shell echo $(foreach CLASSDIR, $(shell echo $(CLASSPATH):$(JAVAHELP_CP) | sed -e 's/:/ /g'),$(shell cd `dirname $(CLASSDIR)`;pwd)/$(shell basename $(CLASSDIR))) | sed -e 's/ /:/g'):$(ADDITIONAL_RUN_CP)\
	om.sciProgram.oracOM $$""{CFG_DIR}/om.cfg\
	\n\
	\n" > $(INSTALL_ROOT)/bin/om

	@echo Creating $(INSTALL_ROOT)/bin/om
	chmod 755 $(INSTALL_ROOT)/bin/om




# author: Martin Folger (M.Folger@roe.ac.uk)

# Making
#     class files          :  "gmake"         (output: CLASSES_DIR, set in CONF_HOME/make.conf)
#     jar file with classes:  "gmake jar"     (output: JAR_DIR,     set in CONF_HOME/make.conf)
#     javadoc html files   :  "gmake doc"     (output: DOC_DIR,     set in CONF_HOME/make.conf)
#
#     install              :  "gmake install" (output: see CONF_HOME/make.conf)
#     clean                :  "gmake clean"   (deletes class files, jar files, api docs)
#
# The output directories are by default subdirectories of LOCAL_INSTALL_ROOT.
# They can be edited in CONF_HOME/make.conf or changed on the command line (e.g. make JAR_DIR=my_jar_dir jar)

CONF_HOME           = ../conf
include $(CONF_HOME)/make.conf


CLASSES_DIR_FOR_SED = $(shell echo $(CLASSES_DIR) | sed -e 's/\./\\\./g' | sed -e 's/\//\\\//g')
CLASS_FILES         = $(shell find . -name "*.java" | sed -e 's/\.\//$(CLASSES_DIR_FOR_SED)\//g' | sed -e 's/\.java/\.class/g')

CFG_FILES           = $(addprefix $(LOCAL_INSTALL_ROOT)/cfg/, $(shell cd ../cfg; find .))

CLASSPATH           = $(CLASSES_DIR):$(GEMINI_CP):$(ORAC_CP)

# Should NOT be changed as other packages might rely on the this name!
JAR_FILE            = odb.jar

#
RMI_GENERATED_CLASSES = $(CLASSES_DIR)/ODBServer_Stub.class $(CLASSES_DIR)/ODBServer_Skel.class

all: $(CLASSES_DIR) $(CLASS_FILES) $(RMI_GENERATED_CLASSES) cfg $(LOCAL_INSTALL_ROOT)/bin/odb

cfg: $(LOCAL_INSTALL_ROOT)/cfg $(LOCAL_INSTALL_ROOT)/ot_cfg $(CFG_FILES)

$(CLASSES_DIR):
	@ -mkdir -p $(CLASSES_DIR)

$(LOCAL_INSTALL_ROOT)/cfg: ../cfg
	cp -r ../cfg $(LOCAL_INSTALL_ROOT)

$(LOCAL_INSTALL_ROOT)/ot_cfg: $(OT_CFG_DIR_SRC)
	rm -rf $@
	cp -r  $< $@

# default rule 
$(CLASSES_DIR)/%.class: %.java
	$(JAVAC) $(JFLAGS) -d $(CLASSES_DIR) -classpath $(CLASSPATH) -sourcepath . $<


# Bundle everything into jar file
jar: all
	jar cf $(JAR_DIR)/$(JAR_FILE) -C $(CLASSES_DIR) .

$(CLASSES_DIR)/MANIFEST.MF: $(CONF_HOME)/MANIFEST.MF
	cp $(CONF_HOME)/MANIFEST.MF $(CLASSES_DIR)/MANIFEST.MF

doc:
	-mkdir -p $(DOC_DIR)
	$(JAVADOC) -J-mx50m -d $(DOC_DIR) `find . -name "*.java"`


$(LOCAL_INSTALL_ROOT)/bin/odb: scripts/odb_script_source $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(LOCAL_INSTALL_ROOT)/bin
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in            #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.                    \
	\n#                                                                                       #\
	\n# For editing this script and keeping the modifications make a copy of this script in   #\
	\n# this directory and edit the copy.                                                     #\
	\n#########################################################################################\
	\n\
	\nsetenv PRG \`which $$""0\`\
	\nsetenv PRG_HOME \`dirname $$""PRG\`\
	\n\
	\nsetenv JAVA_HOME $(shell dirname $(shell dirname $(JAVA)))\
	\nsetenv JAVA_BIN $$""{JAVA_HOME}/bin\
	\n" > $@

ifeq ($(OT_CFG_DIR),)
	@printf "\nset otcfgdir     = $(shell cd $(LOCAL_INSTALL_ROOT); pwd)/ot_cfg/" >> $@
else
	@printf "\nset otcfgdir     = $(OT_CFG_DIR)/" >> $@
endif

ifeq ($(CFG_DIR),)
	@printf "\nset cfgdir       = $(shell cd $(LOCAL_INSTALL_ROOT); pwd)/cfg/" >> $@
else
	@printf "\nset cfgdir       = $(CFG_DIR)/" >> $@
endif

	@printf \
	"\n\
	\n# (generated from $(CONF_HOME)/make.conf)\
	\nsetenv CLASSPATH $(shell echo $(foreach CLASSDIR, $(shell echo $(CLASSPATH):$(JAVAHELP_CP) | sed -e 's/:/ /g'),$(shell cd `dirname $(CLASSDIR)`;pwd)/$(shell basename $(CLASSDIR))) | sed -e 's/ /:/g')\
        \n\
	\n" >> $@

	@cat scripts/odb_script_source >> $@

	@echo Creating $@
	@chmod 755 $@

#install:
#	@echo Use \"\gmake JAR_DIR=my_jar_dir jar\" to create $(JAR_FILE) in my_jar_dir.
#	@echo Use \"\gmake DOC_DIR=my_doc_dir doc\" to create html api javadocs in my_doc_dir.


clean:
	rm -rf $(CLASSES_DIR) $(JAR_DIR) $(DOC_DIR)
	rm -f  $(BIN_DIR)/odb


$(RMI_GENERATED_CLASSES):
	$(RMIC) -classpath $(CLASSPATH) -d $(CLASSES_DIR) ODBServer



###################################################################
#                    Installation                                 #
###################################################################


ALL_LIBS            = $(INSTALL_ROOT)/lib/$(notdir $(GEMINI_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(ORAC_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(ODB_JAR))


INSTALL_CLASSES_DIR = $(INSTALL_ROOT)/classes
INSTALL_JAR_DIR     = $(INSTALL_ROOT)/lib
INSTALL_DOC_DIR     = $(INSTALL_ROOT)/html/api
INSTALL_BIN_DIR     = $(INSTALL_ROOT)/bin
INSTALL_CFG_DIR     = $(INSTALL_ROOT)/cfg

install:
ifeq ($(INSTALL_ROOT),)
	@echo Usage: gmake "INSTALL_ROOT=myinstall_directory" install
else
	gmake _install
endif


_install: $(INSTALL_ROOT)/lib $(INSTALL_ROOT)/tools $(ALL_LIBS) $(ALL_TOOLS) $(INSTALL_ROOT)/cfg $(INSTALL_ROOT)/bin/odb


# Rules for Orac libraries in default location
# If a jar file is not found in its default location the following rules will try to create it directly
# in $(INSTALL_ROOT)/lib rather then create in its default location and then copy it
# into $(INSTALL_ROOT)/lib. This avoids interfering with local setting in other directories.
# These rules will only work if the location of the Orac modules (GEMINI, ORAC, ODB, OT) are equivalent to
# the ones in the cvs directory tree.

$(INSTALL_ROOT)/lib/$(notdir $(GEMINI_JAR)):
ifneq ($(shell if test -f $(GEMINI_JAR) ; then echo exists; fi), )
	cp $(GEMINI_JAR) $@
else
	(cd ../../GEMINI/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(ORAC_JAR)):
ifneq ($(shell if test -f $(ORAC_JAR) ; then echo exists; fi), )
	cp $(ORAC_JAR) $@
else
	(cd ../../ORAC/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(ODB_JAR)):
ifneq ($(shell if test -f $(ODB_JAR) ; then echo exists; fi), )
	cp $(ODB_JAR) $@
else
	(cd ../../ODB/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif



$(INSTALL_ROOT)/cfg: ../cfg
	cp -r $< $(INSTALL_ROOT)

$(INSTALL_ROOT)/lib:
	mkdir -p $(INSTALL_ROOT)/lib


$(INSTALL_ROOT)/bin/odb: scripts/odb_script_source $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(INSTALL_ROOT)/bin
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in            #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.                    \
	\n#                                                                                       #\
	\n# For editing this script and keeping the modifications make a copy of this script in   #\
	\n# this directory and edit the copy.                                                     #\
	\n#########################################################################################\
	\n\
	\nset ODB_HOME = $(shell cd $(INSTALL_ROOT); pwd)\
	\n\
	\nsetenv PRG \`which $$""0\`\
	\nsetenv PRG_HOME \`dirname $$""PRG\`\
	\n\
	\nsetenv JAVA_HOME $(shell dirname $(shell dirname $(JAVA)))\
	\nsetenv JAVA_BIN $$""{JAVA_HOME}/bin\
	\n" > $@

ifeq ($(OT_CFG_DIR),)
	@printf "\nset otcfgdir     = \044{ODB_HOME}/ot_cfg/" >> $@
else
	@printf "\nset otcfgdir     = $(OT_CFG_DIR)/" >> $@
endif

ifeq ($(CFG_DIR),)
	@printf "\nset cfgdir       = \044{ODB_HOME}/cfg/" >> $@
else
	@printf "\nset cfgdir       = $(CFG_DIR)/" >> $@
endif

	@printf \
	"\n\
        \nsetenv CLASSPATH $(shell echo $(addprefix "\044{ODB_HOME}/lib/", $(notdir $(ALL_LIBS))) | sed -e 's/ /:/g')\
	\n\
	\n" >> $@

	@cat scripts/odb_script_source >> $@

	@echo Creating $@
	@chmod 755 $@



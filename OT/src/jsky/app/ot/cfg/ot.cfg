#
# This file specifies configuration information for the Observing Tool.
# Each observatory site that uses the Observing Tool will have its own
# unique configuration.  Configurable elements are specified by key/value
# pairs in the format:
#
#	key: value
#
# Some elements have more than one key/value pair.
#
# Site-specific classes should be stored in a package contained in the
# jsky.app.ot.gemini package.
#
# There are several configurable elements as described below:
#
#
# ---------------
# Guide Star Tags
# ---------------
#
#   This item specifies the tags that will be used for guide stars at
#   this observatory.  The "guide" key indicates this item.  There
#   should only be one guide key in the file, and its values should be
#   comma separated.
#
#   Example:
#		guide:		PWFS1, PWFS2, OIWFS
#
#   This observatory has PWFS1, PWFS2, and OIWFS guide stars.  These
#   choices will be available when the target list is defined and will
#   show up in the Position Editor.
#
#
# ------------------------------
# Position Editor Image Features
# ------------------------------
#
#   One or more add-on image features can be specified.  Each feature
#   specified will have its own toggle button on the Position Editor
#   window and this button will always be present regardless of the
#   context or selected item in the Program Hieararchy view.
#
#   Two keys specify an add-on image feature:
#
#   "tpe feature" - this is the fully qualified class name of the add-on
#   image feature.  The class that it indicates must be a subclass of
#   ot.tpe.TpeImageFeature.
#
#   "tpe type" - this should be one of "target", "instrument", or
#   "independent".  Target dependent features are disabled when there is
#   no target list in the current scope.  Instrument dependent features
#   are disabled when there is no instrument in the current scope, and
#   independent features are never disabled.
#
#   Example:
#		# Acquisition Camera
#		tpe feature:	jsky.app.ot.gemini.tpe.TpeAcqCameraFeature
#		tpe type:	independent
#
#   This example specifies a TpeImageFeature that displays the size of
#   the observatory's acquistion camera.  It is independent of context,
#   and so is available regardless of whether there is a target list or
#   an instrument.
#
#
# -------------
# Program Items
# -------------
#
# A set of observatory-specific program items may be specified.  Instruments
# and many iterators fall into this category.  There are three kinds of
# program items that may be configured.  These are listed below along with
# the base class that each must ultimately subclass:
#
#    1) instruments		gemini.sp.obsComp.SpInstObsComp
#    2) "observe" iterators	gemini.sp.iter.SpIterObserveBase
#    3) "normal" iterators	gemini.sp.iter.SpIterComp
#
# "Observe" iterators are leaves in the program hierarchy tree and are 
# operated upon by more complex iterators like the "Offset" iterator.  They
# specify a repeat (observe) count, and optionally an exposure time per
# observe, and coadd count.
#
# There are three keys that specify a program item.  Two are required and
# one is optional:
#
# "class" - the fully qualified class name.  As noted, the class must
# subclass one of the three base classes above depending upon whether it
# is an instrument, iterator, or observe iterator.
#
# "editor" - this is the fully qualified name of the editor for this item.
# It must subclass ot.editor.OtItemEditor.
#
# "img feature" - this tag is optional.  If present it must be the fully
# qualified name of a ot.tpe.TpeImageFeature subclass.  When the user has
# selected this item in the Program Hierarchy view, the associated image
# feature will be available in the Position Editor, if opened.
#
# Example:
#
#	# NIRI
#	class:		jsky.app.ot.gemini.inst.SpInstNIRI
#	editor:		jsky.app.ot.gemini.inst.editor.EdCompInstNIRI
#	img feature:	jsky.app.ot.gemini.inst.SpInstNIRI_OIWFS_Feature
#
# This example defines an instrument component because SpInstNIRI
# derives from gemini.sp.obsComp.SpInstObsComp (though this information
# isn't apparent from the key/value pairs themselves).  The editor used
# to configure this component is implemented in EdCompInstNIRI.  Finally
# there is an image feature that should be associated with this class.
# In this case, when the user has selected the NIRI component with the
# Position Editor open, s/he will be able to toggle the view of its on-
# instrument wave-front sensor range.
#

# Tags for the guide star entries in the target list.
guide:		PWFS1, PWFS2, OIWFS

# Phase1 Document Generator.
phase1:		jsky.app.ot.gemini.phase1.GeminiPhase1Doc

# Acquisition Camera
tpe feature:	jsky.app.ot.gemini.tpe.TpeAcqCameraFeature
tpe type:	independent

# PWFS Rings
tpe feature:	jsky.app.ot.gemini.tpe.TpePWFSFeature
tpe type:	independent

# NIRI
class:		jsky.app.ot.gemini.inst.SpInstNIRI
editor:		jsky.app.ot.gemini.inst.editor.EdCompInstNIRI
img feature:	jsky.app.ot.gemini.inst.SpInstNIRI_OIWFS_Feature

# Michelle
class:		jsky.app.ot.gemini.inst.SpInstMichelle
editor:		jsky.app.ot.gemini.inst.editor.EdCompInstMichelle

# Bias Obs Iterator
class:		jsky.app.ot.gemini.iter.SpIterBiasObs
editor:		jsky.app.ot.gemini.iter.editor.EdIterBiasObs

# Calibration Unit Obs Iterator
class:		jsky.app.ot.gemini.iter.SpIterCalObs
editor:		jsky.app.ot.gemini.iter.editor.EdIterCalObs

# Dark Obs Iterator
class:		jsky.app.ot.gemini.iter.SpIterDarkObs
editor:		jsky.app.ot.gemini.iter.editor.EdIterDarkObs

# Calibration Unit Config Iterator
class:		jsky.app.ot.gemini.iter.SpIterCalUnit
editor:		jsky.app.ot.editor.EdIterGenericConfig

# Michelle Config Iterator
class:		jsky.app.ot.gemini.iter.SpIterMichelle
editor:		jsky.app.ot.editor.EdIterGenericConfig

# NIRI Config Iterator
class:		jsky.app.ot.gemini.iter.SpIterNIRI
editor:		jsky.app.ot.editor.EdIterGenericConfig


# author: Martin Folger (M.Folger@roe.ac.uk)

# Making
#     class files          :  "gmake"         (output: CLASSES_DIR, set in CONF_HOME/make.conf)
#     jar file with classes:  "gmake jar"     (output: JAR_DIR,     set in CONF_HOME/make.conf)
#     javadoc html files   :  "gmake docs"    (output: DOCS_DIR,    set in CONF_HOME/make.conf)
#
#     install              :  "gmake install" (output: see CONF_HOME/make.conf)
#     clean                :  "gmake clean"   (deletes class files, jar files, api docs)
#
# The output directories are by default subdirectories of LOCAL_INSTALL_ROOT.
# They can be edited in CONF_HOME/make.conf or changed on the command line (e.g. make JAR_DIR=my_jar_dir jar)

CONF_HOME           = ../conf
include $(CONF_HOME)/make.conf


CLASSES_DIR_FOR_SED = $(shell echo $(CLASSES_DIR) | sed -e 's/\./\\\./g' | sed -e 's/\//\\\//g')
CLASS_FILES         = $(shell find . -name "*.java" | sed -e 's/\.\//$(CLASSES_DIR_FOR_SED)\//g' | sed -e 's/\.java/\.class/g')

CLASSPATH           = $(CLASSES_DIR):$(GEMINI_CP):$(ORAC_CP):$(ODB_CP):$(JSKY_RELATED_CP)
RUNTIME_CLASSPATH   = $(CLASSES_DIR):$(GEMINI_CP):$(ORAC_CP):$(ODB_CP):$(JSKY_RELATED_CP):$(JAVAHELP_CP)

# Should NOT be changed as other packages might rely on the this name!
JAR_FILE            = ot.jar

OT_SCRIPT           = $(BIN_DIR)/ot
INSTALLED_OT_SCRIPT = $(INSTALL_BIN_DIR)/ot

all: $(CLASSES_DIR) $(CLASS_FILES)

$(CLASSES_DIR):
	@ -mkdir -p $(CLASSES_DIR)


# default rule 
$(CLASSES_DIR)/%.class: %.java
	$(JAVAC) $(JFLAGS) -d $(CLASSES_DIR) -classpath $(CLASSPATH) -sourcepath . $<


# Bundle everything into jar file
jar: all
	jar cf $(JAR_DIR)/$(JAR_FILE) -C $(CLASSES_DIR) .

$(CLASSES_DIR)/MANIFEST.MF: $(CONF_HOME)/MANIFEST.MF
	cp $(CONF_HOME)/MANIFEST.MF $(CLASSES_DIR)/MANIFEST.MF

docs:
	-mkdir -p $(DOCS_DIR)
	$(JAVADOC) -J-mx50m -d $(DOCS_DIR) `find . -name "*.java"`



$(BIN_DIR):
	mkdir -p $(BIN_DIR)


$(OT_SCRIPT): $(BIN_DIR) $(CONF_HOME)/make.conf
	@echo \
	"#!/bin/csh -f"\
	"\n#########################################################################################"\
	"\n# This file has been automatically generated by \"gmake install\" using the setting in    #"\
	"\n# $(CONF_HOME)/make.conf. Modifications will be lost after each \"gmake install\"       "\
	"\n# Make your own copy for modifications.                                                 #"\
	"\n#########################################################################################"\
        "\n"\
	"\nset JAVA = $(JAVA)"\
	"\n"\
	"\nset INTERNAL_FRAMES = -internalframes"\
	"\nif($$""1 == -nointernalframes) then"\
	"\n  set INTERNAL_FRAMES = \"\""\
	"\nendif"\
	"\n"\
	"\n# Base directory of this ot atc build"\
	"\nset OT_ATC_BASE =      $(shell cd $(LOCAL_INSTALL_ROOT); pwd)"\
        "\n"\
	"\n"\
	"\n  $$""{JAVA} -ms5m -mx50m -oss5m -Dot.cfgdir=$$""{OT_ATC_BASE}/install/classes/ot/cfg/ -Dot.resource.cfgdir=ot/cfg/ -DSERVER="ATC" -classpath \ " > $(OT_SCRIPT)
	@$(foreach CLASSDIR, $(shell echo $(CLASSPATH):$(JAVAHELP_CP) | sed 's/:/ /g'), printf ":$(shell cd `dirname $(CLASSDIR)`;pwd)/$(shell basename $(CLASSDIR))"; >> $(OT_SCRIPT))
#	$(foreach CLASSDIR, $(shell echo $(CLASSPATH) | sed 's/:/ /g'), printf "$(shell cd $(CLASSDIR);pwd):";) >> $(OT_SCRIPT)
#	@printf $(shell cd $(JAVAHELP_CP);pwd) >> $(OT_SCRIPT)
	@echo " jsky.app.ot.OT $$""{INTERNAL_FRAMES}"\
        "\n" >> $(OT_SCRIPT)

	@printf "\nCreating $(OT_SCRIPT)\n"
	chmod 755 $(OT_SCRIPT)






install:
ifeq ($(INSTALL_CLASSES),yes)
  ifeq ($(INSTALL_CLASSES_DIR),$(CLASSES_DIR))
	@echo Classes are already locally installed. If you want to install the classes somewhere else please set INSTALL_CLASSES_DIR in $(CONF_HOME)/make.conf to an install directory other than the local install directory $(CLASSES_DIR).
  else
	mkdir -p $(INSTALL_CLASSES_DIR)
	cp -ir $(CLASSES_DIR)/* $(INSTALL_CLASSES_DIR)
  endif
endif

ifeq ($(INSTALL_JAR),yes)
  ifeq ($(INSTALL_JAR_DIR),$(JAR_DIR))
	@echo Installing jar library locally. If you want to install it somewhere else please set INSTALL_JAR_DIR in $(CONF_HOME)/make.conf to an install directory other than the local install directory $(JAR_DIR).
  endif
	mkdir -p $(INSTALL_JAR_DIR)
	jar cf $(INSTALL_JAR_DIR)/$(JAR_FILE) -C $(CLASSES_DIR) .
endif

ifeq ($(INSTALL_CLASSES)),yes)
  ifeq ($(INSTALL_DOCS_DIR),$(DOCS_DIR))
	@echo Installing the api docs locally. If you want to install them somewhere else please set INSTALL_DOCS_DIR in $(CONF_HOME)/make.conf to an install directory other than the local install directory $(DOCS_DIR).
  endif
	mkdir -p $(INSTALL_CLASSES_DIR)
	cp -ir $(CLASSES_DIR)/* $(INSTALL_CLASSES_DIR)
endif

ifeq ($(INSTALL_BIN),yes)
  ifeq ($(INSTALL_BIN_DIR),$(BIN_DIR))
	@echo Installing script locally. If you want to install it somewhere else please set INSTALL_BIN_DIR in $(CONF_HOME)/make.conf to an install directory other than the local install directory $(BIN_DIR).
  endif

endif

clean:
	rm -f  $(CLASS_FILES)
	rm -f  $(JAR_DIR)/$(JAR_FILE)
	rm -rf $(DOCS_DIR)/*


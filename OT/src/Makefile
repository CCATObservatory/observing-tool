# author: Martin Folger (M.Folger@roe.ac.uk)

# Making
#     class files          :  "gmake"         (output: CLASSES_DIR, set in CONF_HOME/make.conf)
#     jar file with classes:  "gmake jar"     (output: JAR_DIR,     set in CONF_HOME/make.conf)
#     javadoc html files   :  "gmake doc"     (output: DOC_DIR,     set in CONF_HOME/make.conf)
#
#     install              :  "gmake install" (output: see CONF_HOME/make.conf)
#     clean                :  "gmake clean"   (deletes class files, jar files, api docs)
#
# The output directories are by default subdirectories of LOCAL_INSTALL_ROOT.
# They can be edited in CONF_HOME/make.conf or changed on the command line (e.g. make JAR_DIR=my_jar_dir jar)

CONF_HOME           = ../conf
include $(CONF_HOME)/make.conf


CLASSES_DIR_FOR_SED = $(shell echo $(CLASSES_DIR) | sed -e 's/\./\\\./g' | sed -e 's/\//\\\//g')
CLASS_FILES         = $(shell find . -name "*.java" | sed -e 's/\.\//$(CLASSES_DIR_FOR_SED)\//g' | sed -e 's/\.java/\.class/g')

GIF_IMAGES          = $(addprefix $(CLASSES_DIR)/, $(shell find . -name "*.gif"))
CFG_FILES           = $(addprefix $(LOCAL_INSTALL_ROOT)/cfg/, $(shell cd ../cfg; find .))

# Should NOT be changed as other packages might rely on the this name!
JAR_FILE            = ot.jar

# This variable is set to "scripts/ot_bat_install_all_source" on the command line if
# "gmake install" is called in the orac3 directory.
INSTALL_BAT_SCRIPT  = scripts/ot_bat_install_source

#all0:
#	@echo $(EXTERNAL_JAR_DIRS)
#	@echo $(EXTERNAL_JAR_FILES)
#	@echo $(foreach exterbalJarFile,$(EXTERNAL_JAR_FILES),$(shell echo $(notdir $(exterbalJarFile))))
#	@echo COMPILE_CLASSPATH:
#	@echo $(COMPILE_CLASSPATH)
#	@echo LOCAL_INSTALL_ROOT:
#	@echo $(LOCAL_INSTALL_CLASSPATH)
#	@echo INSTALL_CLASSPATH:
#	@echo $(INSTALL_CLASSPATH)

all: classes cfg script


classes: $(CLASSES_DIR) $(CLASS_FILES)

cfg: $(LOCAL_INSTALL_ROOT)/cfg $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/cfg $(GIF_IMAGES) $(CFG_FILES)

script: $(BIN_DIR)/ot $(BIN_DIR)/ot.bat $(BIN_DIR)/ompvalidate

$(LOCAL_INSTALL_ROOT):
	@ -mkdir -p $(LOCAL_INSTALL_ROOT)

$(CLASSES_DIR):
	@ -mkdir -p $(CLASSES_DIR)

$(BIN_DIR):
	@ -mkdir -p $(BIN_DIR)	

# The following rule copies the cfg directories into LOCAL_INSTALL_ROOT
# regardless of whether $(LOCAL_INSTALL_ROOT)/cfg is to be used as CFG_DIRS.
$(LOCAL_INSTALL_ROOT)/cfg: ../cfg FORCE
	if `chmod -R g+w ../cfg/*`; then\
		echo "Permissions changed";\
	fi;

	umask 2

	-cp -r ../cfg/ $(LOCAL_INSTALL_ROOT)
	if `chmod -R g+w $(LOCAL_INSTALL_ROOT)/cfg/*`; then\
		echo "Permissions changed";\
	fi;
# Subversion installs it's .svn directories readonly :P
	if `chmod -R g+w $(LOCAL_INSTALL_ROOT)/.svn/*`; then\
		echo "Permissions changed";\
	fi;

# Hacky solution to adding scema locations to the config files...
	@ echo "" >> $(LOCAL_INSTALL_ROOT)/cfg/jcmt/ot.cfg
	@ echo "schemaBase: JAC/JCMT/JCMT.xsd" >> $(LOCAL_INSTALL_ROOT)/cfg/jcmt/ot.cfg
	@ echo "" >> $(LOCAL_INSTALL_ROOT)/cfg/ukirt/ot.cfg
	@ echo "schemaBase: JAC/UKIRT/UKIRT.xsd" >> $(LOCAL_INSTALL_ROOT)/cfg/ukirt/ot.cfg

FORCE:

$(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/cfg: jsky/app/ot/cfg
	rm -rf $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/cfg
	cp -r jsky/app/ot/cfg $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot

$(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/images: jsky/app/ot/images
	rm -rf $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/images
	cp -r jsky/app/ot/images $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot

$(LOCAL_INSTALL_ROOT)/classes/ot/images: ot/images
	rm -rf $(LOCAL_INSTALL_ROOT)/classes/ot/images
	cp -r ot/images $(LOCAL_INSTALL_ROOT)/classes/ot


# default rule 
$(CLASSES_DIR)/%.class: %.java
	$(JAVAC) $(JFLAGS) -d $(CLASSES_DIR) -classpath $(COMPILE_CLASSPATH) -sourcepath . $<


$(CLASSES_DIR)/%.gif: %.gif
	@mkdir -p `dirname $@`
	cp $< $@

$(LOCAL_INSTALL_ROOT)/cfg/%: ../cfg/%
	cp -r $< $@


# Bundle everything into jar file
jar: classes
	jar cf $(JAR_DIR)/$(JAR_FILE) -C $(CLASSES_DIR) .

$(CLASSES_DIR)/MANIFEST.MF: $(CONF_HOME)/MANIFEST.MF
	cp $(CONF_HOME)/MANIFEST.MF $(CLASSES_DIR)/MANIFEST.MF

doc:
	-mkdir -p $(DOC_DIR)
	$(JAVADOC) -J-mx100m -d $(DOC_DIR) `find . -name "*.java"`


$(BIN_DIR)/ot: scripts/ot_script_source $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(BIN_DIR)
	@rm -f $@
	@cat scripts/ot_script_source >> $@
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in          #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.                   #\
	\n#                                                                                       #\
	\n# For editing this script and keeping the modifications make a copy of this script in   #\
	\n# this directory and edit the copy.                                                     #\
	\n#########################################################################################\
	\n\
	\nset CWD = \`pwd\`\
	\n\
	\ncd \`dirname $$""0\`\
	\n" > $@


ifeq ($(CFG_DIRS),)
	@printf "\nset CFG_DIRS     = ../cfg" >> $@
else
	@printf "\nset CFG_DIRS     = $(CFG_DIRS)" >> $@
endif

	@printf \
	"\n\
	\n# (generated from $(CONF_HOME)/make.conf)\
	\nset CLASSPATH = $(LOCAL_INSTALL_CLASSPATH)\
	\n\
	\n" >> $@

	@cat scripts/ot_script_source >> $@

	@echo Creating $@
	@chmod 775 $@

$(BIN_DIR)/ompvalidate: scripts/ompvalidate
	@mkdir -p $(BIN_DIR)
	@rm -f $@
	@cat $? >> $@
	@chmod 775 $@

$(BIN_DIR)/ot.bat: scripts/ot_bat_local_source
	@mkdir -p $(BIN_DIR)
	@rm -f $@
	@cp $< $@
	@echo Creating $@


clean:
	rm -rf $(CLASSES_DIR) $(JAR_DIR) $(DOC_DIR)
	rm -f  $(BIN_DIR)/ot $(BIN_DIR)/ot.bat
	rm -rf $(LOCAL_INSTALL_ROOT)


###################################################################
#                    Installation                                 #
###################################################################

install-jars:
	@mkdir -p $(INSTALL_ROOT)/tools
	@mkdir -p $(INSTALL_ROOT)/lib

	@cp $(EXTERNAL_JAR_FILES) $(INSTALL_ROOT)/tools

	(cd ../../GEMINI/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
	(cd ../../ORAC/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
	(cd ../../OMP/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
	(cd ../../OT/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
	(cd ../../EDFREQ/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)



install: all
ifeq ($(INSTALL_ROOT),)
	@echo Usage: gmake "INSTALL_ROOT=myinstall_directory" install
else
	gmake _install
endif


_install: install-jars $(INSTALL_ROOT)/cfg $(INSTALL_ROOT)/bin/ot $(INSTALL_ROOT)/bin/ot.bat


# Rules for installing external jar files
$(INSTALL_ROOT)/tools/%.jar:../../ORAC/tools/%.jar
	cp $< $@

$(INSTALL_ROOT)/tools/%.jar:../../OMP/tools/%.jar
	cp $< $@

$(INSTALL_ROOT)/tools/%.jar:../../OT/tools/%.jar
	cp $< $@



$(INSTALL_ROOT)/cfg: ../cfg
	cp -r $< $@

$(INSTALL_ROOT)/lib:
	mkdir -p $(INSTALL_ROOT)/lib

$(INSTALL_ROOT)/tools:
	mkdir -p $(INSTALL_ROOT)/tools



$(INSTALL_ROOT)/bin/ot: scripts/ot_script_source $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(INSTALL_ROOT)/bin
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in          #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.                   #\
	\n#                                                                                       #\
	\n# For editing this script and keeping the modifications make a copy of this script in   #\
	\n# this directory and edit the copy.                                                     #\
	\n#########################################################################################\
        \n\
        \nset CWD = \`pwd\`\
	\n\
	\ncd \`dirname $$""0\`\
	\n" > $@

ifeq ($(CFG_DIRS),)
	@printf "\nset CFG_DIRS     = ../cfg" >> $@
else
	@printf "\nset CFG_DIRS     = $(CFG_DIRS)" >> $@
endif

	@printf \
	"\n\
	\nset CLASSPATH = $(INSTALL_CLASSPATH)\
	\n\
	\n" >> $@

	@cat scripts/ot_script_source >> $@

	@echo Creating $@
	@chmod 775 $@


$(INSTALL_ROOT)/bin/ot.bat: $(INSTALL_BAT_SCRIPT) $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(INSTALL_ROOT)/bin
	@cp $(INSTALL_BAT_SCRIPT) $@
	@echo Creating $@


# author: Martin Folger (M.Folger@roe.ac.uk)

# Making
#     class files          :  "gmake"         (output: CLASSES_DIR, set in CONF_HOME/make.conf)
#     jar file with classes:  "gmake jar"     (output: JAR_DIR,     set in CONF_HOME/make.conf)
#     javadoc html files   :  "gmake doc"     (output: DOC_DIR,     set in CONF_HOME/make.conf)
#
#     install              :  "gmake install" (output: see CONF_HOME/make.conf)
#     clean                :  "gmake clean"   (deletes class files, jar files, api docs)
#
# The output directories are by default subdirectories of LOCAL_INSTALL_ROOT.
# They can be edited in CONF_HOME/make.conf or changed on the command line (e.g. make JAR_DIR=my_jar_dir jar)

CONF_HOME           = ../conf
include $(CONF_HOME)/make.conf


CLASSES_DIR_FOR_SED = $(shell echo $(CLASSES_DIR) | sed -e 's/\./\\\./g' | sed -e 's/\//\\\//g')
CLASS_FILES         = $(shell find . -name "*.java" | sed -e 's/\.\//$(CLASSES_DIR_FOR_SED)\//g' | sed -e 's/\.java/\.class/g')

GIF_IMAGES          = $(addprefix $(CLASSES_DIR)/, $(shell find . -name "*.gif"))
CFG_FILES           = $(addprefix $(LOCAL_INSTALL_ROOT)/cfg/, $(shell cd ../cfg; find .))

CLASSPATH           = $(CLASSES_DIR):$(GEMINI_CP):$(ORAC_CP):$(ODB_CP):$(JSKY_RELATED_CP)

# Should NOT be changed as other packages might rely on the this name!
JAR_FILE            = ot.jar

# This variable is set to "scripts/ot_bat_install_all_source" on the command line if
# "gmake install" is called in the orac3 directory.
INSTALL_BAT_SCRIPT  = scripts/ot_bat_install_source

all: classes cfg script


classes: $(CLASSES_DIR) $(CLASS_FILES)

cfg: $(LOCAL_INSTALL_ROOT)/cfg $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/cfg $(GIF_IMAGES) $(CFG_FILES)

script: $(BIN_DIR)/ot $(BIN_DIR)/ot.bat

$(LOCAL_INSTALL_ROOT):
	@ -mkdir -p $(LOCAL_INSTALL_ROOT)

$(CLASSES_DIR):
	@ -mkdir -p $(CLASSES_DIR)

$(BIN_DIR):
	@ -mkdir -p $(BIN_DIR)	

# The following rule copies the cfg directories into LOCAL_INSTALL_ROOT
# regardless of whether $(LOCAL_INSTALL_ROOT)/cfg is to be used as CFG_DIRS.
$(LOCAL_INSTALL_ROOT)/cfg: ../cfg
	cp -r ../cfg $(LOCAL_INSTALL_ROOT)

$(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/cfg: jsky/app/ot/cfg
	rm -rf $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/cfg
	cp -r jsky/app/ot/cfg $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot

$(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/images: jsky/app/ot/images
	rm -rf $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot/images
	cp -r jsky/app/ot/images $(LOCAL_INSTALL_ROOT)/classes/jsky/app/ot

$(LOCAL_INSTALL_ROOT)/classes/ot/images: ot/images
	rm -rf $(LOCAL_INSTALL_ROOT)/classes/ot/images
	cp -r ot/images $(LOCAL_INSTALL_ROOT)/classes/ot

	

# default rule 
$(CLASSES_DIR)/%.class: %.java
	$(JAVAC) $(JFLAGS) -d $(CLASSES_DIR) -classpath $(CLASSPATH) -sourcepath . $<


$(CLASSES_DIR)/%.gif: %.gif
	@mkdir -p `dirname $@`
	cp $< $@

$(LOCAL_INSTALL_ROOT)/cfg/%: ../cfg/%
	rm -rf $@
	cp -r $< $@


# Bundle everything into jar file
jar: classes
	jar cf $(JAR_DIR)/$(JAR_FILE) -C $(CLASSES_DIR) .

$(CLASSES_DIR)/MANIFEST.MF: $(CONF_HOME)/MANIFEST.MF
	cp $(CONF_HOME)/MANIFEST.MF $(CLASSES_DIR)/MANIFEST.MF

doc:
	-mkdir -p $(DOC_DIR)
	$(JAVADOC) -J-mx50m -d $(DOC_DIR) `find . -name "*.java"`


$(BIN_DIR)/ot: scripts/ot_script_source $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(BIN_DIR)
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in            #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.                    \
	\n#                                                                                       #\
	\n# For editing this script and keeping the modifications make a copy of this script in   #\
	\n# this directory and edit the copy.                                                     #\
	\n#########################################################################################\
	\n\
	\nset JAVA = $(JAVA)\
	\n\
	\n# The telescope names in this list should correspond to the directories in CFG_DIRS.\
	\n# (generated from $(CONF_HOME)/make.conf)\
	\nset TELESCOPE_LIST = \"$(TELESCOPE_LIST)\"\
	\n" > $@

ifeq ($(CFG_DIRS),)
	@printf "\nset CFG_DIRS     = $(shell cd $(LOCAL_INSTALL_ROOT); pwd)/cfg" >> $@
else
	@printf "\nset CFG_DIRS     = $(CFG_DIRS)" >> $@
endif

	@printf \
	"\n\
	\n# (generated from $(CONF_HOME)/make.conf)\
	\nset CLASSPATH = $(shell echo $(foreach CLASSDIR, $(shell echo $(CLASSPATH):$(JAVAHELP_CP) | sed -e 's/:/ /g'),$(shell cd `dirname $(CLASSDIR)`;pwd)/$(shell basename $(CLASSDIR))) | sed -e 's/ /:/g')\
        \n\
	\n" >> $@

	@cat scripts/ot_script_source >> $@

	@echo Creating $@
	@chmod 755 $@


$(BIN_DIR)/ot.bat: scripts/ot_bat_local_source
	@mkdir -p $(BIN_DIR)
	@cp $< $@
	@echo Creating $@


clean:
	rm -rf $(CLASSES_DIR) $(JAR_DIR) $(DOC_DIR)
	rm -f  $(BIN_DIR)/ot $(BIN_DIR)/ot.bat


###################################################################
#                    Installation                                 #
###################################################################

ALL_TOOLS           = $(INSTALL_ROOT)/tools/$(notdir $(JHTOOLS_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(JHALL_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(DIVA_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(GRAPH_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(JACL_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(JDOM_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(JSKY_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(JUNIT_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(TCLJAVA_JAR)) \
                      $(INSTALL_ROOT)/tools/$(notdir $(XERCES_JAR))

ALL_LIBS            = $(INSTALL_ROOT)/lib/$(notdir $(GEMINI_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(ORAC_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(ODB_JAR)) \
                      $(INSTALL_ROOT)/lib/$(notdir $(OT_JAR))


INSTALL_CLASSES_DIR = $(INSTALL_ROOT)/classes
INSTALL_JAR_DIR     = $(INSTALL_ROOT)/lib
INSTALL_DOC_DIR     = $(INSTALL_ROOT)/html/api
INSTALL_BIN_DIR     = $(INSTALL_ROOT)/bin
INSTALL_CFG_DIR     = $(INSTALL_ROOT)/cfg


install: all
ifeq ($(INSTALL_ROOT),)
	@echo Usage: gmake "INSTALL_ROOT=myinstall_directory" install
else
	gmake _install
endif


_install: $(INSTALL_ROOT)/lib $(INSTALL_ROOT)/tools $(ALL_LIBS) $(ALL_TOOLS) $(INSTALL_ROOT)/cfg $(INSTALL_ROOT)/bin/ot $(INSTALL_ROOT)/bin/ot.bat


$(INSTALL_ROOT)/tools/$(notdir $(JHTOOLS_JAR)): $(JHTOOLS_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(JHALL_JAR)): $(JHALL_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(DIVA_JAR)): $(DIVA_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(GRAPH_JAR)): $(GRAPH_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(JACL_JAR)): $(JACL_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(JDOM_JAR)): $(JDOM_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(JSKY_JAR)): $(JSKY_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(JUNIT_JAR)): $(JUNIT_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(TCLJAVA_JAR)): $(TCLJAVA_JAR)
	cp $< $@

$(INSTALL_ROOT)/tools/$(notdir $(XERCES_JAR)): $(XERCES_JAR)
	cp $< $@


# Rules for Orac libraries in default location
# If a jar file is not found in its default location the following rules will try to create it directly
# in $(INSTALL_ROOT)/lib rather then create in its default location and then copy it
# into $(INSTALL_ROOT)/lib. This avoids interfering with local setting in other directories.
# These rules will only work if the location of the Orac modules (GEMINI, ORAC, ODB, OT) are equivalent to
# the ones in the cvs directory tree.

$(INSTALL_ROOT)/lib/$(notdir $(GEMINI_JAR)):
ifneq ($(shell if test -f $(GEMINI_JAR) ; then echo exists; fi), )
	cp $(GEMINI_JAR) $@
else
	(cd ../../GEMINI/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(ORAC_JAR)):
ifneq ($(shell if test -f $(ORAC_JAR) ; then echo exists; fi), )
	cp $(ORAC_JAR) $@
else
	(cd ../../ORAC/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(ODB_JAR)):
ifneq ($(shell if test -f $(ODB_JAR) ; then echo exists; fi), )
	cp $(ODB_JAR) $@
else
	(cd ../../ODB/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif

$(INSTALL_ROOT)/lib/$(notdir $(OT_JAR)):
ifneq ($(shell if test -f $(OT_JAR) ; then echo exists; fi), )
	cp $(OT_JAR) $@
else
	(cd ../../OT/src; gmake JAR_DIR=$(INSTALL_ROOT)/lib jar)
endif



$(INSTALL_ROOT)/cfg: ../cfg
	cp -r $< $@

$(INSTALL_ROOT)/lib:
	mkdir -p $(INSTALL_ROOT)/lib

$(INSTALL_ROOT)/tools:
	mkdir -p $(INSTALL_ROOT)/tools



$(INSTALL_ROOT)/bin/ot: scripts/ot_script_source $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(INSTALL_ROOT)/bin
	@printf \
	"#!/bin/csh -f\
	\n#########################################################################################\
	\n# This file has been automatically generated by \"gmake\" using the setting in            #\
	\n# $(CONF_HOME)/make.conf. Modifications can be lost after a new make.                    \
	\n#                                                                                       #\
	\n# For editing this script and keeping the modifications make a copy of this script in   #\
	\n# this directory and edit the copy.                                                     #\
	\n#########################################################################################\
	\n\
	\nset OT_HOME = $(shell cd $(INSTALL_ROOT); pwd)\
	\n\
	\nset JAVA = $(JAVA)\
	\n\
	\n# The telescope names in this list should correspond to the directories in CFG_DIRS.\
	\n# (generated from $(CONF_HOME)/make.conf)\
	\nset TELESCOPE_LIST = \"$(TELESCOPE_LIST)\"\
	\n" > $@

ifeq ($(CFG_DIRS),)
	@printf "\nset CFG_DIRS     = $$""{OT_HOME}/cfg" >> $@
else
	@printf "\nset CFG_DIRS     = $(CFG_DIRS)" >> $@
endif

	@printf \
	"\n\
	\nset CLASSPATH = $(shell echo $(addprefix DOLLAR{OT_HOME}/tools/", $(notdir $(ALL_TOOLS))) | sed -e 's/ /:/g' | sed -e 's/DOLLAR/\\044/g'):$(shell echo $(addprefix DOLLAR{OT_HOME}/lib/", $(notdir $(ALL_LIBS))) | sed -e 's/ /:/g' | sed -e 's/DOLLAR/\\044/g'))\
	\n\
	\n" >> $@

	@cat scripts/ot_script_source >> $@

	@echo Creating $@
	@chmod 755 $@


$(INSTALL_ROOT)/bin/ot.bat: $(INSTALL_BAT_SCRIPT) $(CONF_HOME)/make.conf Makefile
	@mkdir -p $(INSTALL_ROOT)/bin
	@cp $(INSTALL_BAT_SCRIPT) $@
	@echo Creating $@


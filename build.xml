<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "project.dtd" >

<project name="OT" default="main" basedir=".">
	<property name="local.output.dir" value="output"/>
	<property name="local.output.path" value="${local.output.dir}/classes"/>
	<property name="local.jar.dir" value="${local.output.dir}/lib"/>

	<property name="output.dir" value="${basedir}/output"/>
	<property name="output.dir.lib" value="${output.dir}/lib"/>
	<property name="output.dir.bin" value="${output.dir}/bin"/>
	<property name="output.dir.cfg" value="${output.dir}/cfg"/>

	<property name="docs.dir" value="${basedir}/docs"/>
	<property name="javadoc.dir" value="${docs.dir}/javadoc"/>
        <property name="report.dir" value="${output.dir}/report"/>

	<property name="gemini.dir" value="${basedir}/gemini/src"/>
	<property name="orac.dir" value="${basedir}/orac/src"/>
	<property name="omp.dir" value="${basedir}/omp/src"/>
	<property name="edfreq.dir" value="${basedir}/edfreq/src"/>
	<property name="ot.dir" value="${basedir}/ot/src"/>

	<property name="gemini.jar" value="${gemini.dir}/${local.jar.dir}/gemini.jar"/>
	<property name="orac.jar" value="${orac.dir}/${local.jar.dir}/orac.jar"/>
	<property name="omp.jar" value="${omp.dir}/${local.jar.dir}/omp.jar"/>
	<property name="edfreq.jar" value="${edfreq.dir}/${local.jar.dir}/edfreq.jar"/>
	<property name="ot.jar" value="${ot.dir}/${local.jar.dir}/ot.jar"/>

	<property name="gemini.output.dir" value="${gemini.dir}/${local.output.dir}"/>
	<property name="orac.output.dir" value="${orac.dir}/${local.output.dir}"/>
	<property name="omp.output.dir" value="${omp.dir}/${local.output.dir}"/>
	<property name="edfreq.output.dir" value="${edfreq.dir}/${local.output.dir}"/>
	<property name="ot.output.dir" value="${ot.dir}/${local.output.dir}"/>

	<property name="gemini.output.path" value="${gemini.dir}/${local.output.path}"/>
	<property name="orac.output.path" value="${orac.dir}/${local.output.path}"/>
	<property name="omp.output.path" value="${omp.dir}/${local.output.path}"/>
	<property name="edfreq.output.path" value="${edfreq.dir}/${local.output.path}"/>
	<property name="ot.output.path" value="${ot.dir}/${local.output.path}"/>

	<property name="toml.dir" value="${basedir}/toml/src"/>
	<property name="toml.jar" value="${toml.dir}/${local.jar.dir}/toml.jar"/>
	<property name="toml.schema.dir" value="${toml.dir}/main"/>
	<property name="toml.output.dir" value="${toml.dir}/${local.output.dir}"/>
	<property name="toml.output.path" value="${toml.dir}/${local.output.path}"/>

	<property name="path.to.schema" value="${ot.dir}/main/cfg/schema"/>
	<property name="ukirt.schema" value="${path.to.schema}/JAC/UKIRT/UKIRT.xsd"/>
	<property name="jcmt.schema" value="${path.to.schema}/JAC/JCMT/JCMT.xsd"/>
	<property name="schema.java.path" value="edu.hawaii.jach.omp.toml"/>
	<property name="ukirt.java.path" value="${schema.java.path}.ukirt"/>
	<property name="jcmt.java.path" value="${schema.java.path}.jcmt"/>

        <path id="classpath">
                <fileset dir="${basedir}/lib" includes="**/*.jar"/>
                <fileset dir="${basedir}/lib/jsky3" includes="**/*.jar"/>
        </path>

        <path id="output.classpath">
		<fileset dir="${output.dir.lib}" includes="*.jar"/>
                <fileset dir="${output.dir.lib}/jsky3" includes="*.jar"/> 
	</path>

	<target name="clean">
		<delete dir="${gemini.output.dir}"/>
		<delete dir="${orac.output.dir}"/>
		<delete dir="${omp.output.dir}"/>
		<delete dir="${edfreq.output.dir}"/>
		<delete dir="${ot.output.dir}"/>

		<delete dir="${output.dir}"/>

		<delete file="${ot.dir}/main/cfg/ukirt/versionFile"/>
		<delete file="${ot.dir}/main/cfg/jcmt/versionFile"/>
		<delete file="${ot.dir}/main/cfg/jcmt/tau.list"/>

		<delete dir="${toml.schema.dir}/edu/hawaii/jach/omp/toml/jcmt"/>
                <delete dir="${toml.schema.dir}/edu/hawaii/jach/omp/toml/ukirt"/>
		<delete dir="${toml.dir}/${local.jar.dir}"/>
		<delete dir="${toml.output.path}"/>
		<delete dir="${toml.output.dir}"/>
		<delete dir="${toml.jar}"/>
	</target>

	<target name="mkdir" depends="clean">
		<mkdir dir="${gemini.output.dir}"/>
		<mkdir dir="${gemini.output.path}"/>
		<mkdir dir="${gemini.dir}/${local.jar.dir}"/>
		
		<mkdir dir="${orac.output.dir}"/>
		<mkdir dir="${orac.output.path}"/>
		<mkdir dir="${orac.dir}/${local.jar.dir}"/>
		
		<mkdir dir="${omp.output.dir}"/>
		<mkdir dir="${omp.output.path}"/>
		<mkdir dir="${omp.dir}/${local.jar.dir}"/>
		
		<mkdir dir="${edfreq.output.dir}"/>
		<mkdir dir="${edfreq.output.path}"/>
		<mkdir dir="${edfreq.dir}/${local.jar.dir}"/>
		
		<mkdir dir="${ot.output.dir}"/>
		<mkdir dir="${ot.output.path}"/>
		<mkdir dir="${ot.dir}/${local.jar.dir}"/>

		<mkdir dir="${output.dir}"/>
		<mkdir dir="${output.dir.lib}"/>
		<mkdir dir="${output.dir.bin}"/>
		<mkdir dir="${output.dir.cfg}"/>

		<mkdir dir="${toml.schema.dir}/edu/hawaii/jach/omp/toml/jcmt"/>
        	<mkdir dir="${toml.schema.dir}/edu/hawaii/jach/omp/toml/ukirt"/>
		<mkdir dir="${toml.output.dir}"/>
		<mkdir dir="${toml.output.path}"/>
		<mkdir dir="${toml.dir}/${local.jar.dir}"/>
	</target>

	<target name="toml" depends="mkdir">
		<exec executable="xjc">
			<arg value="-verbose"/>
			<arg value="-d"/>
			<arg value="${toml.schema.dir}"/>
			<arg value="-p"/>
			<arg value="${ukirt.java.path}"/>
			<arg value="${ukirt.schema}"/>
		</exec>
		<exec executable="xjc">
			<arg value="-verbose"/>
			<arg value="-d"/>
			<arg value="${toml.schema.dir}"/>
			<arg value="-p"/>
			<arg value="${jcmt.java.path}"/>
			<arg value="${jcmt.schema}"/>
		</exec>
		<javac srcdir="${toml.dir}/main:${toml.dir}/test"
		       destdir="${toml.output.path}"
                       includeantruntime="false"
                       classpathref="classpath"
		       debug="on"
                       source="1.7"
		       target="1.7">
		</javac>
		<jar jarfile="${toml.jar}"
		     basedir="${toml.output.path}">
		</jar>
	</target>

	<target name="gemini" depends="toml">
		<javac srcdir="${gemini.dir}/main:${gemini.dir}/test"
		       destdir="${gemini.output.path}"
                       includeantruntime="false"
                       classpathref="classpath"
		       debug="on"
                       source="1.7"
		       target="1.7">
			<compilerarg value="-Xlint"/>
			<compilerarg value="-Xlint:-path"/>
		</javac>
		<jar jarfile="${gemini.jar}"
		     basedir="${gemini.output.path}">
		</jar>
	</target>
	
	<target name="orac" depends="gemini">
		<javac srcdir="${orac.dir}/main:${orac.dir}/test"
		       destdir="${orac.output.path}"
                       includeantruntime="false"
                       classpathref="classpath"
		       debug="on"
                       source="1.7"
		       target="1.7">
			<compilerarg value="-Xlint"/>
			<compilerarg value="-Xlint:-path"/>
			<classpath>
				<pathelement location="${gemini.jar}" />
			</classpath>
		</javac>
		<jar jarfile="${orac.jar}"
		     basedir="${orac.output.path}">
		</jar>
	</target>
	
	<target name="omp" depends="orac">
		<javac srcdir="${omp.dir}/main:${omp.dir}/test"
		       destdir="${omp.output.path}"
                       includeantruntime="false"
                       classpathref="classpath"
		       debug="on"
                       source="1.7"
		       target="1.7">
			<compilerarg value="-Xlint"/>
			<compilerarg value="-Xlint:-path"/>
			<classpath>
				<pathelement location="${gemini.jar}" />
				<pathelement location="${orac.jar}" />
			</classpath>
		</javac>
		<jar jarfile="${omp.jar}"
		     basedir="${omp.output.path}">
		</jar>
	</target>
	
	<target name="edfreq" depends="omp">
		<javac srcdir="${edfreq.dir}/main:${edfreq.dir}/test"
		       destdir="${edfreq.output.path}"
                       includeantruntime="false"
                       classpathref="classpath"
		       debug="on"
                       source="1.7"
		       target="1.7">
			<compilerarg value="-Xlint"/>
			<compilerarg value="-Xlint:-path"/>
                        <classpath>
				<pathelement location="${gemini.jar}" />
				<pathelement location="${orac.jar}" />
				<pathelement location="${omp.jar}" />
			</classpath>
		</javac>
		<jar jarfile="${edfreq.jar}"
		     basedir="${edfreq.output.path}">
		</jar>
	</target>

	<target name="ot" depends="edfreq">
		<javac srcdir="${ot.dir}/main:${ot.dir}/test"
		       destdir="${ot.output.path}"
                       includeantruntime="false"
                       classpathref="classpath"
		       debug="on"
                       source="1.7"
		       target="1.7">
			<compilerarg value="-Xlint"/>
			<compilerarg value="-Xlint:-path"/>
			<classpath>
				<pathelement location="${gemini.jar}" />
				<pathelement location="${orac.jar}" />
				<pathelement location="${omp.jar}" />
				<pathelement location="${edfreq.jar}" />
			</classpath>
		</javac>
		<copy todir="${ot.output.path}/jsky/app/ot/images">
			<fileset dir="${ot.dir}/main/jsky/app/ot/images"/>
		</copy>
		<dirset dir="${ot.dir}/main/ot/images"/>
		<copy todir="${ot.output.path}/ot/images">
			<fileset dir="${ot.dir}/main/ot/images"/>
		</copy>
		<jar jarfile="${ot.jar}"
		     basedir="${ot.output.path}">
		</jar>
                <exec executable="/bin/sh">
                        <arg value="${basedir}/scripts/create_cfg_files.sh"/>
                </exec>
	</target>

	<target name="copy" depends="ot">
		<copy file="${gemini.jar}" todir="${output.dir.lib}" />
		<copy file="${orac.jar}" todir="${output.dir.lib}" />
		<copy file="${omp.jar}" todir="${output.dir.lib}" />
		<copy file="${edfreq.jar}" todir="${output.dir.lib}" />
		<copy file="${ot.jar}" todir="${output.dir.lib}" />
		<copy file="${toml.jar}" todir="${output.dir.lib}" />

                <copy todir="${output.dir.lib}">
                        <fileset dir="${basedir}/lib"/>
                </copy>

		<copy todir="${output.dir.cfg}/ot">
			<fileset dir="${ot.dir}/main/cfg"/>
		</copy>
		<chmod perm="+w">
			<fileset dir="${output.dir.cfg}/ot"/>
		</chmod>
	</target>

	<target name="cfg.jar" depends="copy">
		<jar jarfile="${output.dir.lib}/cfg.jar"
		     basedir="${output.dir.cfg}">
		</jar>
	</target>

	<target name="create.bin.files">
		<exec executable="/bin/sh">
			<arg value="${basedir}/scripts/create_bin_files.sh"/>
			<arg pathref="output.classpath"/>
		</exec>
		<replaceregexp file="${output.dir.bin}/ot"
			       match="${output.dir}"
			       replace=".."
			       flags="g"
			       byline="false"/>
		<chmod perm="+x" file="${output.dir.bin}/ot"/>
	</target>

	<target name="output">
		<antcall target="cfg.jar"/>
		<antcall target="create.bin.files"/>
	</target>

	<target name="main" depends="output">
		<echo message="Done"/>
	</target>

<!-- Create the javadoc -->

	<target name="javadoc">
		<javadoc destdir="${javadoc.dir}"
		         private="on">
		         <sourcepath>
				<pathelement location="${gemini.dir}/main"/>
				<pathelement location="${orac.dir}/main"/>
				<pathelement location="${omp.dir}/main"/>
				<pathelement location="${edfreq.dir}/main"/>
				<pathelement location="${ot.dir}/main"/>
                                <pathelement location="${toml.dir}/main"/>
		         </sourcepath>
		</javadoc>
	</target>

	<target name="cleanjavadoc">
		<delete dir="${javadoc.dir}"/>
	</target>

<!-- Run the JUnit tests -->
       
        <target name="junit">
            <mkdir dir="${report.dir}"/>
            <junit printsummary="yes">
                <classpath>
                      <path refid="output.classpath"/>
                <!--  <path refid="application"/>-->
                </classpath>
            
                <formatter type="xml"/>

                <batchtest fork="yes" todir="${report.dir}">
                     <fileset dir="${gemini.dir}/test" includes="**/*Test.java"/>
                     <fileset dir="${orac.dir}/test" includes="**/*Test.java"/>
                     <fileset dir="${omp.dir}/test" includes="**/*Test.java"/>
                     <fileset dir="${edfreq.dir}/test" includes="**/*Test.java"/>
                     <fileset dir="${ot.dir}/test" includes="**/*Test.java"/>
                     <fileset dir="${toml.dir}/test" includes="**/*Test.java"/>
                </batchtest>
            </junit>
        </target>
    
        <target name="junitreport">
            <junitreport todir="${report.dir}">
                <fileset dir="${report.dir}" includes="TEST-*.xml"/>
                <report todir="${report.dir}"/>
            </junitreport>
        </target>

</project>
